namespace ts {
    export interface AggregateInterfaceForJsonSchemaExtraction {
        // ReusableDiagnosticMessageChain: ReusableDiagnosticMessageChain;
        // ReusableDiagnosticRelatedInformation: ReusableDiagnosticRelatedInformation;
        // ReusableDiagnostic: ReusableDiagnostic;
        // BuilderState: BuilderState;
        // ProgramBuildInfoDiagnostic: ProgramBuildInfoDiagnostic;
        // ProgramBuildInfo: ProgramBuildInfo;
        // Pattern: Pattern;
        // Path: Path;
        // TextRange: TextRange;
        // JSDocSyntaxKind: JSDocSyntaxKind;
        // KeywordSyntaxKind: KeywordSyntaxKind;
        // JsxTokenSyntaxKind: JsxTokenSyntaxKind;
        // SyntaxKind: SyntaxKind;
        // NodeFlags: NodeFlags;
        // ModifierFlags: ModifierFlags;
        // JsxFlags: JsxFlags;
        // RelationComparisonResult: RelationComparisonResult;
        Node: Node;
        JSDocContainer: JSDocContainer;
        // HasJSDoc: HasJSDoc;
        // HasType: HasType;
        // HasTypeArguments: HasTypeArguments;
        // HasInitializer: HasInitializer;
        // HasExpressionInitializer: HasExpressionInitializer;
        // DotToken: DotToken;
        // DotDotDotToken: DotDotDotToken;
        // QuestionToken: QuestionToken;
        // QuestionDotToken: QuestionDotToken;
        // ExclamationToken: ExclamationToken;
        // ColonToken: ColonToken;
        // EqualsToken: EqualsToken;
        // AsteriskToken: AsteriskToken;
        // EqualsGreaterThanToken: EqualsGreaterThanToken;
        // EndOfFileToken: EndOfFileToken;
        // ReadonlyToken: ReadonlyToken;
        // AwaitKeywordToken: AwaitKeywordToken;
        // PlusToken: PlusToken;
        // MinusToken: MinusToken;
        // AssertsToken: AssertsToken;
        // Modifier: Modifier;
        // ModifiersArray: ModifiersArray;
        // GeneratedIdentifierFlags: GeneratedIdentifierFlags;
        // Identifier: Identifier;
        // TransientIdentifier: TransientIdentifier;
        // GeneratedIdentifier: GeneratedIdentifier;
        // QualifiedName: QualifiedName;
        // EntityName: EntityName;
        // PropertyName: PropertyName;
        // DeclarationName: DeclarationName;
        // Declaration: Declaration;
        // NamedDeclaration: NamedDeclaration;
        // DynamicNamedDeclaration: DynamicNamedDeclaration;
        // DynamicNamedBinaryExpression: DynamicNamedBinaryExpression;
        // LateBoundDeclaration: LateBoundDeclaration;
        // LateBoundBinaryExpressionDeclaration: LateBoundBinaryExpressionDeclaration;
        // LateBoundElementAccessExpression: LateBoundElementAccessExpression;
        // DeclarationStatement: DeclarationStatement;
        // ComputedPropertyName: ComputedPropertyName;
        // PrivateIdentifier: PrivateIdentifier;
        // LateBoundName: LateBoundName;
        // Decorator: Decorator;
        // TypeParameterDeclaration: TypeParameterDeclaration;
        // SignatureDeclarationBase: SignatureDeclarationBase;
        // SignatureDeclaration: SignatureDeclaration;
        // CallSignatureDeclaration: CallSignatureDeclaration;
        // ConstructSignatureDeclaration: ConstructSignatureDeclaration;
        // BindingName: BindingName;
        // VariableDeclaration: VariableDeclaration;
        // VariableDeclarationList: VariableDeclarationList;
        // ParameterDeclaration: ParameterDeclaration;
        // BindingElement: BindingElement;
        // BindingElementGrandparent: BindingElementGrandparent;
        // PropertySignature: PropertySignature;
        // PropertyDeclaration: PropertyDeclaration;
        // PrivateIdentifierPropertyDeclaration: PrivateIdentifierPropertyDeclaration;
        // ObjectLiteralElement: ObjectLiteralElement;
        // ObjectLiteralElementLike: ObjectLiteralElementLike;
        // PropertyAssignment: PropertyAssignment;
        // ShorthandPropertyAssignment: ShorthandPropertyAssignment;
        // SpreadAssignment: SpreadAssignment;
        // VariableLikeDeclaration: VariableLikeDeclaration;
        // PropertyLikeDeclaration: PropertyLikeDeclaration;
        // ObjectBindingPattern: ObjectBindingPattern;
        // ArrayBindingPattern: ArrayBindingPattern;
        // BindingPattern: BindingPattern;
        // ArrayBindingElement: ArrayBindingElement;
        // FunctionLikeDeclarationBase: FunctionLikeDeclarationBase;
        // FunctionLikeDeclaration: FunctionLikeDeclaration;
        // FunctionLike: FunctionLike;
        // FunctionDeclaration: FunctionDeclaration;
        // MethodSignature: MethodSignature;
        // MethodDeclaration: MethodDeclaration;
        // ConstructorDeclaration: ConstructorDeclaration;
        // SemicolonClassElement: SemicolonClassElement;
        // GetAccessorDeclaration: GetAccessorDeclaration;
        // SetAccessorDeclaration: SetAccessorDeclaration;
        // AccessorDeclaration: AccessorDeclaration;
        // IndexSignatureDeclaration: IndexSignatureDeclaration;
        // TypeNode: TypeNode;
        // KeywordTypeNode: KeywordTypeNode;
        // ImportTypeNode: ImportTypeNode;
        // LiteralImportTypeNode: LiteralImportTypeNode;
        // ThisTypeNode: ThisTypeNode;
        // FunctionOrConstructorTypeNode: FunctionOrConstructorTypeNode;
        // FunctionOrConstructorTypeNodeBase: FunctionOrConstructorTypeNodeBase;
        // FunctionTypeNode: FunctionTypeNode;
        // ConstructorTypeNode: ConstructorTypeNode;
        // NodeWithTypeArguments: NodeWithTypeArguments;
        // TypeReferenceType: TypeReferenceType;
        // TypeReferenceNode: TypeReferenceNode;
        // TypePredicateNode: TypePredicateNode;
        // TypeQueryNode: TypeQueryNode;
        // TypeLiteralNode: TypeLiteralNode;
        // ArrayTypeNode: ArrayTypeNode;
        // TupleTypeNode: TupleTypeNode;
        // OptionalTypeNode: OptionalTypeNode;
        // RestTypeNode: RestTypeNode;
        // UnionOrIntersectionTypeNode: UnionOrIntersectionTypeNode;
        // UnionTypeNode: UnionTypeNode;
        // IntersectionTypeNode: IntersectionTypeNode;
        // ConditionalTypeNode: ConditionalTypeNode;
        // InferTypeNode: InferTypeNode;
        // ParenthesizedTypeNode: ParenthesizedTypeNode;
        // TypeOperatorNode: TypeOperatorNode;
        // UniqueTypeOperatorNode: UniqueTypeOperatorNode;
        // IndexedAccessTypeNode: IndexedAccessTypeNode;
        // MappedTypeNode: MappedTypeNode;
        // LiteralTypeNode: LiteralTypeNode;
        StringLiteral: StringLiteral;
        StringLiteralLike: StringLiteralLike;
        Expression: Expression;
        OmittedExpression: OmittedExpression;
        PartiallyEmittedExpression: PartiallyEmittedExpression;
        UnaryExpression: UnaryExpression;
        IncrementExpression: IncrementExpression;
        UpdateExpression: UpdateExpression;
        PrefixUnaryOperator: PrefixUnaryOperator;
        PrefixUnaryExpression: PrefixUnaryExpression;
        PostfixUnaryOperator: PostfixUnaryOperator;
        PostfixUnaryExpression: PostfixUnaryExpression;
        LeftHandSideExpression: LeftHandSideExpression;
        MemberExpression: MemberExpression;
        PrimaryExpression: PrimaryExpression;
        NullLiteral: NullLiteral;
        BooleanLiteral: BooleanLiteral;
        ThisExpression: ThisExpression;
        SuperExpression: SuperExpression;
        ImportExpression: ImportExpression;
        DeleteExpression: DeleteExpression;
        TypeOfExpression: TypeOfExpression;
        VoidExpression: VoidExpression;
        AwaitExpression: AwaitExpression;
        YieldExpression: YieldExpression;
        SyntheticExpression: SyntheticExpression;
        ExponentiationOperator: ExponentiationOperator;
        MultiplicativeOperator: MultiplicativeOperator;
        MultiplicativeOperatorOrHigher: MultiplicativeOperatorOrHigher;
        AdditiveOperator: AdditiveOperator;
        AdditiveOperatorOrHigher: AdditiveOperatorOrHigher;
        ShiftOperator: ShiftOperator;
        ShiftOperatorOrHigher: ShiftOperatorOrHigher;
        RelationalOperator: RelationalOperator;
        RelationalOperatorOrHigher: RelationalOperatorOrHigher;
        EqualityOperator: EqualityOperator;
        EqualityOperatorOrHigher: EqualityOperatorOrHigher;
        BitwiseOperator: BitwiseOperator;
        BitwiseOperatorOrHigher: BitwiseOperatorOrHigher;
        LogicalOperator: LogicalOperator;
        LogicalOperatorOrHigher: LogicalOperatorOrHigher;
        CompoundAssignmentOperator: CompoundAssignmentOperator;
        AssignmentOperator: AssignmentOperator;
        AssignmentOperatorOrHigher: AssignmentOperatorOrHigher;
        BinaryOperator: BinaryOperator;
        BinaryOperatorToken: BinaryOperatorToken;
        BinaryExpression: BinaryExpression;
        AssignmentOperatorToken: AssignmentOperatorToken;
        ObjectDestructuringAssignment: ObjectDestructuringAssignment;
        ArrayDestructuringAssignment: ArrayDestructuringAssignment;
        DestructuringAssignment: DestructuringAssignment;
        BindingOrAssignmentElement: BindingOrAssignmentElement;
        BindingOrAssignmentElementRestIndicator: BindingOrAssignmentElementRestIndicator;
        BindingOrAssignmentElementTarget: BindingOrAssignmentElementTarget;
        ObjectBindingOrAssignmentPattern: ObjectBindingOrAssignmentPattern;
        ArrayBindingOrAssignmentPattern: ArrayBindingOrAssignmentPattern;
        AssignmentPattern: AssignmentPattern;
        BindingOrAssignmentPattern: BindingOrAssignmentPattern;
        ConditionalExpression: ConditionalExpression;
        FunctionBody: FunctionBody;
        ConciseBody: ConciseBody;
        FunctionExpression: FunctionExpression;
        ArrowFunction: ArrowFunction;
        LiteralLikeNode: LiteralLikeNode;
        TemplateLiteralLikeNode: TemplateLiteralLikeNode;
        LiteralExpression: LiteralExpression;
        RegularExpressionLiteral: RegularExpressionLiteral;
        NoSubstitutionTemplateLiteral: NoSubstitutionTemplateLiteral;
        TokenFlags: TokenFlags;
        NumericLiteral: NumericLiteral;
        BigIntLiteral: BigIntLiteral;
        TemplateHead: TemplateHead;
        TemplateMiddle: TemplateMiddle;
        TemplateTail: TemplateTail;
        TemplateLiteral: TemplateLiteral;
        TemplateExpression: TemplateExpression;
        TemplateSpan: TemplateSpan;
        ParenthesizedExpression: ParenthesizedExpression;
        ArrayLiteralExpression: ArrayLiteralExpression;
        SpreadElement: SpreadElement;
        ObjectLiteralExpression: ObjectLiteralExpression;
        EntityNameExpression: EntityNameExpression;
        EntityNameOrEntityNameExpression: EntityNameOrEntityNameExpression;
        AccessExpression: AccessExpression;
        PropertyAccessExpression: PropertyAccessExpression;
        PrivateIdentifierPropertyAccessExpression: PrivateIdentifierPropertyAccessExpression;
        PropertyAccessChain: PropertyAccessChain;
        PropertyAccessChainRoot: PropertyAccessChainRoot;
        SuperPropertyAccessExpression: SuperPropertyAccessExpression;
        PropertyAccessEntityNameExpression: PropertyAccessEntityNameExpression;
        ElementAccessExpression: ElementAccessExpression;
        ElementAccessChain: ElementAccessChain;
        ElementAccessChainRoot: ElementAccessChainRoot;
        SuperElementAccessExpression: SuperElementAccessExpression;
        SuperProperty: SuperProperty;
        CallExpression: CallExpression;
        CallChain: CallChain;
        CallChainRoot: CallChainRoot;
        OptionalChain: OptionalChain;
        OptionalChainRoot: OptionalChainRoot;
        WellKnownSymbolExpression: WellKnownSymbolExpression;
        BindableObjectDefinePropertyCall: BindableObjectDefinePropertyCall;
        BindableStaticNameExpression: BindableStaticNameExpression;
        LiteralLikeElementAccessExpression: LiteralLikeElementAccessExpression;
        BindableStaticElementAccessExpression: BindableStaticElementAccessExpression;
        BindableElementAccessExpression: BindableElementAccessExpression;
        BindableStaticAccessExpression: BindableStaticAccessExpression;
        BindableAccessExpression: BindableAccessExpression;
        BindableStaticPropertyAssignmentExpression: BindableStaticPropertyAssignmentExpression;
        BindablePropertyAssignmentExpression: BindablePropertyAssignmentExpression;
        SuperCall: SuperCall;
        ImportCall: ImportCall;
        ExpressionWithTypeArguments: ExpressionWithTypeArguments;
        NewExpression: NewExpression;
        TaggedTemplateExpression: TaggedTemplateExpression;
        CallLikeExpression: CallLikeExpression;
        AsExpression: AsExpression;
        TypeAssertion: TypeAssertion;
        AssertionExpression: AssertionExpression;
        NonNullExpression: NonNullExpression;
        MetaProperty: MetaProperty;
        ImportMetaProperty: ImportMetaProperty;
        JsxElement: JsxElement;
        JsxOpeningLikeElement: JsxOpeningLikeElement;
        JsxAttributeLike: JsxAttributeLike;
        JsxTagNameExpression: JsxTagNameExpression;
        JsxTagNamePropertyAccess: JsxTagNamePropertyAccess;
        JsxAttributes: JsxAttributes;
        JsxOpeningElement: JsxOpeningElement;
        JsxSelfClosingElement: JsxSelfClosingElement;
        JsxFragment: JsxFragment;
        JsxOpeningFragment: JsxOpeningFragment;
        JsxClosingFragment: JsxClosingFragment;
        JsxAttribute: JsxAttribute;
        JsxSpreadAttribute: JsxSpreadAttribute;
        JsxClosingElement: JsxClosingElement;
        JsxExpression: JsxExpression;
        JsxText: JsxText;
        JsxChild: JsxChild;
        Statement: Statement;
        NotEmittedStatement: NotEmittedStatement;
        EndOfDeclarationMarker: EndOfDeclarationMarker;
        CommaListExpression: CommaListExpression;
        MergeDeclarationMarker: MergeDeclarationMarker;
        SyntheticReferenceExpression: SyntheticReferenceExpression;
        EmptyStatement: EmptyStatement;
        DebuggerStatement: DebuggerStatement;
        MissingDeclaration: MissingDeclaration;
        BlockLike: BlockLike;
        Block: Block;
        VariableStatement: VariableStatement;
        ExpressionStatement: ExpressionStatement;
        PrologueDirective: PrologueDirective;
        IfStatement: IfStatement;
        IterationStatement: IterationStatement;
        DoStatement: DoStatement;
        WhileStatement: WhileStatement;
        ForInitializer: ForInitializer;
        ForStatement: ForStatement;
        ForInOrOfStatement: ForInOrOfStatement;
        ForInStatement: ForInStatement;
        ForOfStatement: ForOfStatement;
        BreakStatement: BreakStatement;
        ContinueStatement: ContinueStatement;
        BreakOrContinueStatement: BreakOrContinueStatement;
        ReturnStatement: ReturnStatement;
        WithStatement: WithStatement;
        SwitchStatement: SwitchStatement;
        CaseBlock: CaseBlock;
        CaseClause: CaseClause;
        DefaultClause: DefaultClause;
        CaseOrDefaultClause: CaseOrDefaultClause;
        LabeledStatement: LabeledStatement;
        ThrowStatement: ThrowStatement;
        TryStatement: TryStatement;
        CatchClause: CatchClause;
        ObjectTypeDeclaration: ObjectTypeDeclaration;
        DeclarationWithTypeParameters: DeclarationWithTypeParameters;
        DeclarationWithTypeParameterChildren: DeclarationWithTypeParameterChildren;
        ClassLikeDeclarationBase: ClassLikeDeclarationBase;
        ClassDeclaration: ClassDeclaration;
        ClassExpression: ClassExpression;
        ClassLikeDeclaration: ClassLikeDeclaration;
        ClassElement: ClassElement;
        TypeElement: TypeElement;
        InterfaceDeclaration: InterfaceDeclaration;
        HeritageClause: HeritageClause;
        TypeAliasDeclaration: TypeAliasDeclaration;
        EnumMember: EnumMember;
        EnumDeclaration: EnumDeclaration;
        ModuleName: ModuleName;
        ModuleBody: ModuleBody;
        AmbientModuleDeclaration: AmbientModuleDeclaration;
        ModuleDeclaration: ModuleDeclaration;
        NamespaceBody: NamespaceBody;
        NamespaceDeclaration: NamespaceDeclaration;
        JSDocNamespaceBody: JSDocNamespaceBody;
        JSDocNamespaceDeclaration: JSDocNamespaceDeclaration;
        ModuleBlock: ModuleBlock;
        ModuleReference: ModuleReference;
        ImportEqualsDeclaration: ImportEqualsDeclaration;
        ExternalModuleReference: ExternalModuleReference;
        ImportDeclaration: ImportDeclaration;
        NamedImportBindings: NamedImportBindings;
        NamedExportBindings: NamedExportBindings;
        ImportClause: ImportClause;
        NamespaceImport: NamespaceImport;
        NamespaceExport: NamespaceExport;
        NamespaceExportDeclaration: NamespaceExportDeclaration;
        ExportDeclaration: ExportDeclaration;
        NamedImports: NamedImports;
        NamedExports: NamedExports;
        NamedImportsOrExports: NamedImportsOrExports;
        ImportSpecifier: ImportSpecifier;
        ExportSpecifier: ExportSpecifier;
        ImportOrExportSpecifier: ImportOrExportSpecifier;
        TypeOnlyCompatibleAliasDeclaration: TypeOnlyCompatibleAliasDeclaration;
        ExportAssignment: ExportAssignment;
        FileReference: FileReference;
        CheckJsDirective: CheckJsDirective;
        CommentKind: CommentKind;
        CommentRange: CommentRange;
        SynthesizedComment: SynthesizedComment;
        JSDocTypeExpression: JSDocTypeExpression;
        JSDocType: JSDocType;
        JSDocAllType: JSDocAllType;
        JSDocUnknownType: JSDocUnknownType;
        JSDocNonNullableType: JSDocNonNullableType;
        JSDocNullableType: JSDocNullableType;
        JSDocOptionalType: JSDocOptionalType;
        JSDocFunctionType: JSDocFunctionType;
        JSDocVariadicType: JSDocVariadicType;
        JSDocNamepathType: JSDocNamepathType;
        JSDocTypeReferencingNode: JSDocTypeReferencingNode;
        JSDoc: JSDoc;
        JSDocTag: JSDocTag;
        JSDocUnknownTag: JSDocUnknownTag;
        JSDocAugmentsTag: JSDocAugmentsTag;
        JSDocAuthorTag: JSDocAuthorTag;
        JSDocClassTag: JSDocClassTag;
        JSDocPublicTag: JSDocPublicTag;
        JSDocPrivateTag: JSDocPrivateTag;
        JSDocProtectedTag: JSDocProtectedTag;
        JSDocReadonlyTag: JSDocReadonlyTag;
        JSDocEnumTag: JSDocEnumTag;
        JSDocThisTag: JSDocThisTag;
        JSDocTemplateTag: JSDocTemplateTag;
        JSDocReturnTag: JSDocReturnTag;
        JSDocTypeTag: JSDocTypeTag;
        JSDocTypedefTag: JSDocTypedefTag;
        JSDocCallbackTag: JSDocCallbackTag;
        JSDocSignature: JSDocSignature;
        JSDocPropertyLikeTag: JSDocPropertyLikeTag;
        JSDocPropertyTag: JSDocPropertyTag;
        JSDocParameterTag: JSDocParameterTag;
        JSDocTypeLiteral: JSDocTypeLiteral;
        // FlowFlags: FlowFlags;
        // FlowNode: FlowNode;
        // FlowNodeBase: FlowNodeBase;
        // FlowLock: FlowLock;
        // AfterFinallyFlow: AfterFinallyFlow;
        // PreFinallyFlow: PreFinallyFlow;
        // FlowStart: FlowStart;
        // FlowLabel: FlowLabel;
        // FlowAssignment: FlowAssignment;
        // FlowCall: FlowCall;
        // FlowCondition: FlowCondition;
        // FlowSwitchClause: FlowSwitchClause;
        // FlowArrayMutation: FlowArrayMutation;
        // FlowType: FlowType;
        // IncompleteType: IncompleteType;
        // AmdDependency: AmdDependency;
        // SourceFileLike: SourceFileLike;
        // RedirectInfo: RedirectInfo;
        // SourceFile: SourceFile;
        // ExportedModulesFromDeclarationEmit: ExportedModulesFromDeclarationEmit;
        // Bundle: Bundle;
        // InputFiles: InputFiles;
        // UnparsedSource: UnparsedSource;
        // UnparsedSourceText: UnparsedSourceText;
        // UnparsedNode: UnparsedNode;
        // UnparsedSection: UnparsedSection;
        // UnparsedPrologue: UnparsedPrologue;
        // UnparsedPrepend: UnparsedPrepend;
        // UnparsedTextLike: UnparsedTextLike;
        // UnparsedSyntheticReference: UnparsedSyntheticReference;
        // JsonSourceFile: JsonSourceFile;
        // TsConfigSourceFile: TsConfigSourceFile;
        // JsonMinusNumericLiteral: JsonMinusNumericLiteral;
        // JsonObjectExpressionStatement: JsonObjectExpressionStatement;
        // ScriptReferenceHost: ScriptReferenceHost;
        // ParseConfigHost: ParseConfigHost;
        // ResolvedConfigFileName: ResolvedConfigFileName;
        // WriteFileCallback: WriteFileCallback;
        // OperationCanceledException: OperationCanceledException;
        // CancellationToken: CancellationToken;
        // RefFileKind: RefFileKind;
        // RefFile: RefFile;
        // Program: Program;
        // RedirectTargetsMap: RedirectTargetsMap;
        // ResolvedProjectReference: ResolvedProjectReference;
        // StructureIsReused: StructureIsReused;
        // CustomTransformerFactory: CustomTransformerFactory;
        // CustomTransformer: CustomTransformer;
        // CustomTransformers: CustomTransformers;
        // EmitTransformers: EmitTransformers;
        // SourceMapSpan: SourceMapSpan;
        // SourceMapEmitResult: SourceMapEmitResult;
        // ExitStatus: ExitStatus;
        // EmitResult: EmitResult;
        // TypeCheckerHost: TypeCheckerHost;
        // TypeChecker: TypeChecker;
        // UnionReduction: UnionReduction;
        // ContextFlags: ContextFlags;
        // NodeBuilderFlags: NodeBuilderFlags;
        // TypeFormatFlags: TypeFormatFlags;
        // SymbolFormatFlags: SymbolFormatFlags;
        // SymbolWalker: SymbolWalker;
        // SymbolAccessibility: SymbolAccessibility;
        // SyntheticSymbolKind: SyntheticSymbolKind;
        // TypePredicateKind: TypePredicateKind;
        // TypePredicateBase: TypePredicateBase;
        // ThisTypePredicate: ThisTypePredicate;
        // IdentifierTypePredicate: IdentifierTypePredicate;
        // AssertsThisTypePredicate: AssertsThisTypePredicate;
        // AssertsIdentifierTypePredicate: AssertsIdentifierTypePredicate;
        // TypePredicate: TypePredicate;
        // AnyImportSyntax: AnyImportSyntax;
        // AnyImportOrReExport: AnyImportOrReExport;
        // ValidImportTypeNode: ValidImportTypeNode;
        // AnyValidImportOrReExport: AnyValidImportOrReExport;
        // RequireOrImportCall: RequireOrImportCall;
        // LateVisibilityPaintedStatement: LateVisibilityPaintedStatement;
        // SymbolVisibilityResult: SymbolVisibilityResult;
        // SymbolAccessibilityResult: SymbolAccessibilityResult;
        // AllAccessorDeclarations: AllAccessorDeclarations;
        // TypeReferenceSerializationKind: TypeReferenceSerializationKind;
        // EmitResolver: EmitResolver;
        // SymbolFlags: SymbolFlags;
        // Symbol: Symbol;
        // SymbolLinks: SymbolLinks;
        // EnumKind: EnumKind;
        // CheckFlags: CheckFlags;
        // TransientSymbol: TransientSymbol;
        // ReverseMappedSymbol: ReverseMappedSymbol;
        // InternalSymbolName: InternalSymbolName;
        // SymbolTable: SymbolTable;
        // PatternAmbientModule: PatternAmbientModule;
        // NodeCheckFlags: NodeCheckFlags;
        // NodeLinks: NodeLinks;
        // TypeFlags: TypeFlags;
        // DestructuringPattern: DestructuringPattern;
        // Type: Type;
        // IntrinsicType: IntrinsicType;
        // NullableType: NullableType;
        // FreshableIntrinsicType: FreshableIntrinsicType;
        // FreshableType: FreshableType;
        // LiteralType: LiteralType;
        // UniqueESSymbolType: UniqueESSymbolType;
        // StringLiteralType: StringLiteralType;
        // NumberLiteralType: NumberLiteralType;
        // BigIntLiteralType: BigIntLiteralType;
        // EnumType: EnumType;
        // ObjectFlags: ObjectFlags;
        // ObjectFlagsType: ObjectFlagsType;
        // ObjectType: ObjectType;
        // InterfaceType: InterfaceType;
        // BaseType: BaseType;
        // InterfaceTypeWithDeclaredMembers: InterfaceTypeWithDeclaredMembers;
        // TypeReference: TypeReference;
        // DeferredTypeReference: DeferredTypeReference;
        // VarianceFlags: VarianceFlags;
        // GenericType: GenericType;
        // TupleType: TupleType;
        // TupleTypeReference: TupleTypeReference;
        // UnionOrIntersectionType: UnionOrIntersectionType;
        // UnionType: UnionType;
        // IntersectionType: IntersectionType;
        // StructuredType: StructuredType;
        // AnonymousType: AnonymousType;
        // MappedType: MappedType;
        // EvolvingArrayType: EvolvingArrayType;
        // ReverseMappedType: ReverseMappedType;
        // ResolvedType: ResolvedType;
        // FreshObjectLiteralType: FreshObjectLiteralType;
        // IterationTypes: IterationTypes;
        // IterableOrIteratorType: IterableOrIteratorType;
        // PromiseOrAwaitableType: PromiseOrAwaitableType;
        // SyntheticDefaultModuleType: SyntheticDefaultModuleType;
        // InstantiableType: InstantiableType;
        // TypeParameter: TypeParameter;
        // IndexedAccessType: IndexedAccessType;
        // TypeVariable: TypeVariable;
        // IndexType: IndexType;
        // ConditionalRoot: ConditionalRoot;
        // ConditionalType: ConditionalType;
        // SubstitutionType: SubstitutionType;
        // JsxReferenceKind: JsxReferenceKind;
        // SignatureKind: SignatureKind;
        // SignatureFlags: SignatureFlags;
        // Signature: Signature;
        // IndexKind: IndexKind;
        // IndexInfo: IndexInfo;
        // TypeMapper: TypeMapper;
        // InferencePriority: InferencePriority;
        // InferenceInfo: InferenceInfo;
        // InferenceFlags: InferenceFlags;
        // Ternary: Ternary;
        // TypeComparer: TypeComparer;
        // InferenceContext: InferenceContext;
        // WideningContext: WideningContext;
        // AssignmentDeclarationKind: AssignmentDeclarationKind;
        // JsFileExtensionInfo: JsFileExtensionInfo;
        // FileExtensionInfo: FileExtensionInfo;
        // DiagnosticMessage: DiagnosticMessage;
        // DiagnosticMessageChain: DiagnosticMessageChain;
        // Diagnostic: Diagnostic;
        // DiagnosticRelatedInformation: DiagnosticRelatedInformation;
        // DiagnosticWithLocation: DiagnosticWithLocation;
        // DiagnosticCategory: DiagnosticCategory;
        // ModuleResolutionKind: ModuleResolutionKind;
        // PluginImport: PluginImport;
        // ProjectReference: ProjectReference;
        // WatchFileKind: WatchFileKind;
        // WatchDirectoryKind: WatchDirectoryKind;
        // PollingWatchKind: PollingWatchKind;
        // CompilerOptionsValue: CompilerOptionsValue;
        // CompilerOptions: CompilerOptions;
        // WatchOptions: WatchOptions;
        // TypeAcquisition: TypeAcquisition;
        // ModuleKind: ModuleKind;
        // JsxEmit: JsxEmit;
        // ImportsNotUsedAsValues: ImportsNotUsedAsValues;
        // NewLineKind: NewLineKind;
        // LineAndCharacter: LineAndCharacter;
        // ScriptKind: ScriptKind;
        // ScriptTarget: ScriptTarget;
        // LanguageVariant: LanguageVariant;
        // ParsedCommandLine: ParsedCommandLine;
        // WatchDirectoryFlags: WatchDirectoryFlags;
        // ConfigFileSpecs: ConfigFileSpecs;
        // ExpandResult: ExpandResult;
        // RequireResult: RequireResult;
        // CreateProgramOptions: CreateProgramOptions;
        // CommandLineOptionBase: CommandLineOptionBase;
        // CommandLineOptionOfPrimitiveType: CommandLineOptionOfPrimitiveType;
        // CommandLineOptionOfCustomType: CommandLineOptionOfCustomType;
        // DidYouMeanOptionsDiagnostics: DidYouMeanOptionsDiagnostics;
        // TsConfigOnlyOption: TsConfigOnlyOption;
        // CommandLineOptionOfListType: CommandLineOptionOfListType;
        // CommandLineOption: CommandLineOption;
        // CharacterCodes: CharacterCodes;
        // ModuleResolutionHost: ModuleResolutionHost;
        // ResolvedModule: ResolvedModule;
        // ResolvedModuleFull: ResolvedModuleFull;
        // PackageId: PackageId;
        // Extension: Extension;
        // ResolvedModuleWithFailedLookupLocations: ResolvedModuleWithFailedLookupLocations;
        // ResolvedTypeReferenceDirective: ResolvedTypeReferenceDirective;
        // ResolvedTypeReferenceDirectiveWithFailedLookupLocations: ResolvedTypeReferenceDirectiveWithFailedLookupLocations;
        // HasInvalidatedResolution: HasInvalidatedResolution;
        // CompilerHost: CompilerHost;
        // SourceOfProjectReferenceRedirect: SourceOfProjectReferenceRedirect;
        // ResolvedProjectReferenceCallbacks: ResolvedProjectReferenceCallbacks;
        // TransformFlags: TransformFlags;
        // SourceMapRange: SourceMapRange;
        // SourceMapSource: SourceMapSource;
        // EmitNode: EmitNode;
        // EmitFlags: EmitFlags;
        // EmitHelper: EmitHelper;
        // UnscopedEmitHelper: UnscopedEmitHelper;
        // UniqueNameHandler: UniqueNameHandler;
        // EmitHelperUniqueNameCallback: EmitHelperUniqueNameCallback;
        // ExternalEmitHelpers: ExternalEmitHelpers;
        // EmitHint: EmitHint;
        // SourceFileMayBeEmittedHost: SourceFileMayBeEmittedHost;
        // EmitHost: EmitHost;
        // PropertyDescriptorAttributes: PropertyDescriptorAttributes;
        // TransformationContext: TransformationContext;
        // Visitor: Visitor;
        // Printer: Printer;
        // BundleFileSectionKind: BundleFileSectionKind;
        // BundleFileSectionBase: BundleFileSectionBase;
        // BundleFilePrologue: BundleFilePrologue;
        // BundleFileEmitHelpers: BundleFileEmitHelpers;
        // BundleFileHasNoDefaultLib: BundleFileHasNoDefaultLib;
        // BundleFileReference: BundleFileReference;
        // BundleFilePrepend: BundleFilePrepend;
        // BundleFileTextLikeKind: BundleFileTextLikeKind;
        // BundleFileTextLike: BundleFileTextLike;
        // BundleFileSection: BundleFileSection;
        // SourceFilePrologueDirectiveExpression: SourceFilePrologueDirectiveExpression;
        // SourceFilePrologueDirective: SourceFilePrologueDirective;
        // SourceFilePrologueInfo: SourceFilePrologueInfo;
        // SourceFileInfo: SourceFileInfo;
        // BundleFileInfo: BundleFileInfo;
        // BundleBuildInfo: BundleBuildInfo;
        // BuildInfo: BuildInfo;
        // PrintHandlers: PrintHandlers;
        // PrinterOptions: PrinterOptions;
        // RawSourceMap: RawSourceMap;
        // SourceMapGenerator: SourceMapGenerator;
        // DocumentPositionMapperHost: DocumentPositionMapperHost;
        // DocumentPositionMapper: DocumentPositionMapper;
        // DocumentPosition: DocumentPosition;
        // EmitTextWriter: EmitTextWriter;
        // GetEffectiveTypeRootsHost: GetEffectiveTypeRootsHost;
        // ModuleSpecifierResolutionHost: ModuleSpecifierResolutionHost;
        // SymbolTracker: SymbolTracker;
        // TextSpan: TextSpan;
        // TextChangeRange: TextChangeRange;
        // DiagnosticCollection: DiagnosticCollection;
        // SyntaxList: SyntaxList;
        // ListFormat: ListFormat;
        // PragmaKindFlags: PragmaKindFlags;
        // PragmaDefinition: PragmaDefinition;
        // PragmaPseudoMap: PragmaPseudoMap;
        // PragmaPseudoMapEntry: PragmaPseudoMapEntry;
        // ReadonlyPragmaMap: ReadonlyPragmaMap;
        // PragmaMap: PragmaMap;
        // UserPreferences: UserPreferences;
        // PseudoBigInt: PseudoBigInt;

    }
}